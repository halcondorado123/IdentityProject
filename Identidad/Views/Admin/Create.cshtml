@model Identidad.Models.Usuario
@using Identidad.Models.ModelUsuario

@{
    ViewData["Title"] = "Crear Usuario";
}

<style>
    label{
        font-weight: bold;
        color: #5d5c5c;
    }

    input{
        color: red;
    }

    .container-fluid {
        padding: 0;
    }

    .content-wrapper {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .content-container {
        width: 100%;
        max-width: 1200px;
        box-sizing: border-box;
        background-color: #f8f9fa;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-row-custom {
        margin-bottom: 1rem; /* Espacio entre las filas personalizadas */
    }


    /* Eliminar las flechas del input number en Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Para Firefox */
    input[type="number"] {
        -moz-appearance: textfield;
    }

</style>

<div class="container">
    <div class="row">
        <h2 style="text-align: center;">Creación de usuario</h2>
        <p style="text-align:center;">
            En este módulo se podrán llevar a cabo la creación de un nuevo usuario de la compañía. Toda la información generada será registrada y dará lugar a un seguimiento en nuestras bases de datos.
        </p>
    </div>
    <form asp-action="Create" method="post">
        <!-- Fila 1 -->
        <div class="row">
            <h3 style="margin-top:20px">Datos de Identificación</h3>
            <hr />

            <!-- Primera columna -->
            <div class="form-group col-md-3">
                <label for="TipoDocumento">Tipo de Documento*</label>
                <select id="TipoDocumento" class="form-control" required></select>
            </div>

            <!-- Segunda columna -->
            <div class="form-group col-md-3">
                <label for="NumeroDocumento"> Número de documento*
                    <i class="fa-solid fa-circle-info" data-toggle="tooltip" data-placement="top"
                       title="Ingrese su número de documento:
              * Cédula de ciudadanía: hasta 14 dígitos numéricos.
              * Cédula de extranjería: hasta 14 dígitos numéricos.
              * Pasaporte: 3 letras seguidas de hasta 10 números." /></i>
                </label>
                <input type="text" id="NumeroDocumento" class="form-control" autocomplete="off" required />
            </div>

            <!-- Lugar de Expedición -->
            <div class="form-group col-md-3">
                <label for="LugarExpedicion">Lugar de Expedición*</label>
                <input type="text" id="LugarExpedicion" class="form-control" autocomplete="off" required />
            </div>

            <!-- Grupo sanguineo -->
            <div class="form-group col-md-3">
                <label for="GrupoSanguineo">RH*</label>
                <select id="GrupoSanguineo" class="form-control" required></select>
            </div>

            <div class="form-group col-md-6">
                <label for="Nombres">Nombre*</label>
                <input type="text" id="Nombres" class="form-control" autocomplete="off" required />
            </div>

            <div class="form-group col-md-6">
                <label for="Apellidos">Apellidos*</label>
                <input type="text" id="Apellidos" class="form-control" autocomplete="off" required />
            </div>

            <div class="form-group col-md-3">
                <label for="FechaNacimiento">Fecha de Nacimiento*</label>
                <input type="date" id="FechaNacimiento" class="form-control" required />
            </div>

            <div class="form-group col-md-3">
                <label for="FechaExpedicion">Fecha de Expedición*</label>
                <input type="date" id="FechaExpedicion" class="form-control" required />
            </div>

            <div class="form-group col-md-3">
                <label for="FechaVencimiento">Fecha de Vencimiento</label>
                <input type="date" id="FechaVencimiento" class="form-control" />
            </div>

            <div class="form-group col-md-3">
                <label for="Edad">Edad</label>
                <input type="number" id="Edad" class="form-control" disabled />
            </div>

            <h3 style="margin-top:20px">Datos Geográficos del Nacimiento*</h3>
            <hr />

            <div class="form-group col-md-4">
                <label for="PaisNacimiento">País de Nacimiento*</label>
                <select id="PaisNacimiento" class="form-control" required></select>
            </div>

            <!-- Dropdown de Departamento -->
            <div class="form-group col-md-3">
                <label for="DepartamentoNacimiento">Departamento de Nacimiento*</label>
                <select id="DepartamentoNacimiento" class="form-control" disabled required></select>
            </div>

            <div class="form-group col-md-4">
                <label for="MunicipioNacimiento">Municipio de Nacimiento*</label>
                <select id="MunicipioNacimiento" class="form-control" disabled required></select>
            </div>

            <h3 style="margin-top:20px">Información de Contacto</h3>
            <hr />

            <!-- Este no puede ser igual al corporativo, limitarlo a un condicional para que no se repita esa información -->
            <div class="form-group col-md-3">
                <label for="EmailPersonal">Correo electrónico*</label>
                <input type="email" id="EmailPersonal" class="form-control" />
            </div>

            <div class="form-group col-md-3">
                <label for="Celular">Celular*</label>
                <input type="tel" id="Celular" class="form-control" />
            </div>

            <div class="form-group col-md-3">
                <label for="Telefono">Teléfono*</label>
                <input type="tel" id="Telefono" class="form-control" />
            </div>

            <div class="form-group col-md-3">
                <label for="EstadoCivil">Estado Civil*</label>
                <select id="EstadoCivil" class="form-control">
                    <option value="">Seleccione un estado civil</option>
                </select>
            </div>

            <div class="form-group col-md-6">
                <label for="DireccionDomicilio">Dirección de Domicilio*</label>
                <input type="text" id="DireccionDomicilio" class="form-control" autocomplete="off" required />
            </div>
            <div class="form-group col-md-6">
                <label for="PaisDomicilio">País de Domicilio*</label>
                <select id="PaisDomicilio" class="form-control"></select>
            </div>

            <div class="form-group col-md-6">
                <label for="DepartamentoDomicilio">Departamento de Domicilio*</label>
                <select id="DepartamentoDomicilio" class="form-control" disabled required></select>
            </div>

            <div class="form-group col-md-6">
                <label for="MunicipioDomicilio">Municipio de Domicilio*</label>
                <select id="MunicipioDomicilio" class="form-control" disabled required></select>
            </div>

            <h3 style="margin-top:20px">Información de usuario</h3>
            <hr />

            <div class="form-group col-md-6">
                <label for="NombreUsuario">Nombre de Usuario</label>
                <input type="text" id="NombreUsuario" class="form-control" />
            </div>

            <div class="form-group col-md-6">
                <label for="EmailCorporativo">Email Corporativo</label>
                <input type="email" id="EmailCorporativo" class="form-control" />
            </div>

            <div class="form-group col-md-6">
                <label for="Password">Contraseña</label>
                <input type="password" id="Password" class="form-control" />
            </div>

            <div class="form-group col-md-6">
                <label for="Password">Confirma la contraseña</label>
                <input type="password" id="ConfirmaPassword" class="form-control" />
            </div>

             <div class="form-group col-md-12 text-center" style="margin-top: 30px;">
                <button type="submit" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </form>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>  <!-- Versión completa -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://kit.fontawesome.com/9c9ff965bd.js" crossorigin="anonymous"></script>


<!-- Tu HTML aquí -->

<script>


    $(document).ready(function () {
        cargarTipoDocumento();
        cargarTipoRH();
        cargarEstadoCivil();  // Llamar a la función cuando la página carga
        cargarPais("PaisNacimiento");
        cargarPais("PaisDomicilio");
        cargarDepartamento('PaisNacimiento', 'DepartamentoNacimiento');     // Va relacion ID pais y dpto en JS.
        cargarDepartamento('PaisDomicilio', 'DepartamentoDomicilio');       // Va relacion ID pais y dpto en JS.
        cargarMunicipio('DepartamentoNacimiento', 'MunicipioNacimiento');
        cargarMunicipio('DepartamentoDomicilio', 'MunicipioDomicilio');
    });

    // Inicializar el valor del campo con el valor almacenado en localStorage
    $("#NumeroDocumento").val(localStorage.getItem("NumeroDocumento"));

    // Manejador para el evento input
    $("#NumeroDocumento").on("input", function (event) {
        let value = $("#NumeroDocumento").val();
        let tipoDocumento = $("#TipoDocumento").val();

        if (tipoDocumento === "3") {
            // Validación para Pasaporte (exactamente 3 letras seguidas de hasta 10 números)
            const regex = /^[a-zA-Z]{3}[0-9]{0,10}$/;

            if (!regex.test(value)) {
                // Reemplazar cualquier carácter que no cumpla con la expresión regular
                value = value.replace(/[^a-zA-Z0-9]/g, ''); // Primero quitar cualquier carácter que no sea letra o número
                let letras = value.match(/[a-zA-Z]{0,3}/); // Obtener hasta las primeras 3 letras
                letras = letras ? letras[0].toUpperCase() : ''; // Convertir las letras a mayúsculas
                const numeros = value.replace(/[a-zA-Z]/g, ''); // Eliminar las letras para obtener los números
                value = letras + numeros.slice(0, 10); // Recombinar las letras y los números, limitando a 10 números
                $("#NumeroDocumento").val(value);
            }
        } else {
            // Validación para Cédula y Cédula de extranjería (solo números, máximo 14 dígitos)
            const regex = /^\d{0,14}$/;

            if (!regex.test(value)) {
                // Reemplazar cualquier carácter que no cumpla con la expresión regular
                value = value.replace(/[^0-9]/g, ''); // Solo números permitidos
                value = value.slice(0, 14); // Limitar a 14 dígitos
                $("#NumeroDocumento").val(value);
            }
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        // Obtén referencias a los elementos del formulario
        var tipoDocumento = document.getElementById('TipoDocumento');
        var numeroDocumento = document.getElementById('NumeroDocumento');
        var ciudadExpedicion = document.getElementById('LugarExpedicion');
        var nombres = document.getElementById('NumeroDocumento');
        var ciudadExpedicion = document.getElementById('LugarExpedicion');


        // Añade un listener para el evento 'change' en el campo TipoDocumento
        tipoDocumento.addEventListener('change', function () {
            // Borra el valor del campo NumeroDocumento cuando cambia el TipoDocumento
            numeroDocumento.value = '';
            ciudadExpedicion.value = '';
        });
    });

    // Manejador para el evento keydown
    $("#NumeroDocumento").on("keydown", function (event) {
        let tipoDocumento = $("#TipoDocumento").val();

        if (tipoDocumento === "3") {
            // Evitar ingresar 0 al principio para Pasaporte
            if (event.key === '0' && $(this).val().length === 0) {
                event.preventDefault();
            }
        } else {
            // Evitar ingresar 0 al principio para otros documentos
            if (event.key === '0' && $(this).val().length === 0) {
                event.preventDefault();
            }
        }
    });

    // VALIDACION PARA NOMBRE (Parametrizado a un máximo de 100 caracteres)
    $("#Nombres").val(localStorage.getItem("Nombres"));
    $("#Nombres").on("input", function (event) {
        let value = $("#Nombres").val();
        // Expresión regular que permite letras con acentos y caracteres especiales
        const regex = /^[\p{L}\s]*$/u;

        if (!regex.test(value)) {
            value = value.replace(/[^\p{L}\s]/gu, ''); // Reemplazar caracteres no permitidos
            $("#Nombres").val(value);
        }

        if (value.length > 100) {
            value = value.slice(0, 100);
            $("#Nombres").val(value);
        }
    });

    // VALIDACION PARA APELLIDOS (Parametrizado a un máximo de 100 caracteres)
    $("#Apellidos").val(localStorage.getItem("Apellidos"));
    $("#Apellidos").on("input", function (event) {
        let value = $("#Apellidos").val();
        // Expresión regular que permite letras con acentos y caracteres especiales
        const regex = /^[\p{L}\s]*$/u;

        if (!regex.test(value)) {
            value = value.replace(/[^\p{L}\s]/gu, ''); // Reemplazar caracteres no permitidos
            $("#Apellidos").val(value);
        }

        if (value.length > 100) {
            value = value.slice(0, 100);
            $("#Apellidos").val(value);
        }
    });

    // Función para calcular la edad
    function calcularEdad(fechaNacimiento) {
        const hoy = new Date();
        const nacimiento = new Date(fechaNacimiento);
        let edad = hoy.getFullYear() - nacimiento.getFullYear();
        const mes = hoy.getMonth() - nacimiento.getMonth();

        // Ajustar si el cumpleaños aún no ha ocurrido este año
        if (mes < 0 || (mes === 0 && hoy.getDate() < nacimiento.getDate())) {
            edad--;
        }
        return edad;
    }

    // Evento que escucha cuando el usuario selecciona una fecha
    document.getElementById("FechaNacimiento").addEventListener("change", function () {
        const fechaNacimiento = this.value;
        const edad = calcularEdad(fechaNacimiento);
        document.getElementById("Edad").value = edad;
    });

    // // Confirmar contraseña
    // document.getElementById('submitBtn').addEventListener('click', function () {
    //     const password = document.getElementById('Password').value;
    //     const confirmPassword = document.getElementById('ConfirmaPassword').value;
    //     const errorMessage = document.getElementById('errorMessage');

    //     if (password !== confirmPassword) {
    //         errorMessage.textContent = 'Escriba bien esa mierda.';
    //     } else {
    //         errorMessage.textContent = '';
    //         // Aquí puedes proceder con el envío del formulario
    //         alert('Las contraseñas coinciden. ¡Formulario enviado!');
    //     }
    // });


    // DDL FORMS

    function cargarTipoDocumento() {
        $.ajax({
            url: "@Url.Action("ObtenerTipoDocumento", "DropDownLists")",  // Ruta al controlador
            type: "GET",  // Usa GET
            dataType: "json",  // Esperamos JSON
            success: function (response) {
                console.log(response);
                // Limpiar el select y agregar la opción por defecto
                $("#TipoDocumento").html(`<option value="">Seleccione una opción</option>`);

                // Verificar si la respuesta tiene datos
                if (response && response.length > 0) {
                    // Agregar opciones al select
                    response.forEach(function (tipoDocumento) {
                        $("#TipoDocumento").append(`<option value='${tipoDocumento.documentoId}'>${tipoDocumento.tipoDocumento}</option>`);
                    });
                } else {
                    // Mensaje si no hay datos disponibles
                    $("#TipoDocumento").append(`<option value="">Seleccione una opción</option>`);
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Ocurrió un error al cargar los tipos de documentos. Por favor, inténtalo de nuevo más tarde.'
                });
            }
        });
    }

    function cargarTipoRH() {
        $.ajax({
            url: "@Url.Action("ObtenerTipoRH", "DropDownLists")",  // Ruta al controlador
            type: "GET",  // Usa GET
            dataType: "json",  // Esperamos JSON
            success: function (response) {
                console.log(response);
                // Limpiar el select y agregar la opción por defecto
                $("#GrupoSanguineo").html(`<option value="">Seleccione una opción</option>`);

                // Verificar si la respuesta tiene datos
                if (response && response.length > 0) {
                    // Agregar opciones al select
                    response.forEach(function (tipoSangre) {
                        $("#GrupoSanguineo").append(`<option value='${tipoSangre.grupoSanguineoId}'>${tipoSangre.grupoSanguineo}</option>`);
                    });
                } else {
                    // Mensaje si no hay datos disponibles
                    $("#GrupoSanguineo").append(`<option value="">Seleccione una opción</option>`);
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Ocurrió un error al cargar los tipos de sangre. Por favor, inténtalo de nuevo más tarde.'
                });
            }
        });
    }

    function cargarEstadoCivil() {
        $.ajax({
            url: "@Url.Action("ObtenerEstadoCivil", "DropDownLists")",  // Ruta al controlador
            type: "GET",  // Usa GET
            dataType: "json",  // Esperamos JSON
            success: function (response) {
                console.log(response);
                // Limpiar el select y agregar la opción por defecto
                $("#EstadoCivil").html(`<option value="">Seleccione una opción</option>`);

                // Verificar si la respuesta tiene datos
                if (response && response.length > 0) {
                    // Agregar opciones al select
                    response.forEach(function (estadoCivil) {
                        $("#EstadoCivil").append(`<option value='${estadoCivil.estadoCivilId}'>${estadoCivil.estadoCivil}</option>`);
                    });
                } else {
                    // Mensaje si no hay datos disponibles
                    $("#EstadoCivil").append(`<option value="">Seleccione una opción</option>`);
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Ocurrió un error al cargar los estados civiles. Por favor, inténtalo de nuevo más tarde.'
                });
            }
        });
    }


    function cargarPais(elementId) {
        $.ajax({
            url: "@Url.Action("ObtenerPaisUsuario", "DropDownLists")",
            type: "GET",
            dataType: "json",
            success: function (response) {
                console.log(response);
                // Limpiar el select y agregar la opción por defecto
                $(`#${elementId}`).html(`<option value="">Seleccione una opción</option>`);

                // Verificar si la respuesta tiene datos
                if (response && response.length > 0) {
                    // Agregar opciones al select
                    response.forEach(function (paisNacimiento) {
                        $(`#${elementId}`).append(`<option value='${paisNacimiento.paisId}'>${paisNacimiento.pais}</option>`);
                    });
                } else {
                    // Mensaje si no hay datos disponibles
                    $(`#${elementId}`).append(`<option value="">Seleccione una opción</option>`);
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Ocurrió un error al cargar los paises. Por favor, inténtalo de nuevo más tarde.'
                });
            }
        });
    }

    function cargarDepartamento(paisDropdownId, departamentoDropdownId) {
        // Función que carga los departamentos al seleccionar un país
        $(`#${paisDropdownId}`).change(function () {
            var paisId = $(this).val(); // Obtener el ID del país seleccionado

            // Si se seleccionó un país, cargar los departamentos
            if (paisId) {
                $.ajax({
                    url: '@Url.Action("ObtenerDepartamentoUsuario", "DropDownLists")', // Controlador que devuelve departamentos
                    type: 'GET',
                    data: { paisId: paisId },  // Enviar el ID del país como parámetro
                    dataType: 'json',
                    success: function (response) {
                        console.log(response);

                        // Limpiar el dropdown de departamentos
                        $(`#${departamentoDropdownId}`).html('<option value="">Seleccione una opción</option>');

                        // Habilitar el dropdown de departamentos
                        $(`#${departamentoDropdownId}`).prop('disabled', false);

                        // Agregar los departamentos al dropdown
                        response.forEach(function (departamento) {
                            $(`#${departamentoDropdownId}`).append(`<option value='${departamento.departamentoId}'>${departamento.departamento}</option>`);
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al cargar los departamentos. Por favor, inténtalo de nuevo más tarde.'
                        });
                    }
                });
            } else {
                // Si no se selecciona un país, deshabilitar el dropdown de departamentos
                $(`#${departamentoDropdownId}`).html('<option value="">Seleccione una opción</option>');
                $(`#${departamentoDropdownId}`).prop('disabled', true);
            }
        });
    }

    function cargarMunicipio(departamentoDropdownId, municipioDropDownId) {
        // Función que carga los departamentos al seleccionar un país
        $(`#${departamentoDropdownId}`).change(function () {
            var departamentoId = $(this).val(); // Obtener el ID del país seleccionado

            // Si se seleccionó un país, cargar los departamentos
            if (departamentoId) {
                $.ajax({
                    url: '@Url.Action("ObtenerMunicipioUsuario", "DropDownLists")', // Controlador que devuelve departamentos
                    type: 'GET',
                    data: { departamentoId: departamentoId },  // Enviar el ID del país como parámetro
                    dataType: 'json',
                    success: function (response) {

                        // Limpiar el dropdown de departamentos
                        $(`#${municipioDropDownId}`).html('<option value="">Seleccione una opción</option>');

                        // Habilitar el dropdown de departamentos
                        $(`#${municipioDropDownId}`).prop('disabled', false);

                        // Agregar los departamentos al dropdown
                        response.forEach(function (municipio) {
                            $(`#${municipioDropDownId}`).append(`<option value='${municipio.municipioId}'>${municipio.municipio}</option>`);
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error al cargar los departamentos. Por favor, inténtalo de nuevo más tarde.'
                        });
                    }
                });
            } else {
                // Si no se selecciona un país, deshabilitar el dropdown de departamentos
                $(`#${departamentoDropdownId}`).html('<option value="">Seleccione una opción</option>');
                $(`#${departamentoDropdownId}`).prop('disabled', true);
                $(`#${municipioDropDownId}`).html('<option value="">Seleccione una opción</option>');
                $(`#${municipioDropDownId}`).prop('disabled', true);
            }
        });
    }



</script>